/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.apache.hudi.avro.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class HoodieCleanFileInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6026630272931428184L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"HoodieCleanFileInfo\",\"namespace\":\"org.apache.hudi.avro.model\",\"fields\":[{\"name\":\"filePath\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isBootstrapBaseFile\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<HoodieCleanFileInfo> ENCODER =
      new BinaryMessageEncoder<HoodieCleanFileInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<HoodieCleanFileInfo> DECODER =
      new BinaryMessageDecoder<HoodieCleanFileInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<HoodieCleanFileInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<HoodieCleanFileInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<HoodieCleanFileInfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this HoodieCleanFileInfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a HoodieCleanFileInfo from a ByteBuffer. */
  public static HoodieCleanFileInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String filePath;
  @Deprecated public java.lang.Boolean isBootstrapBaseFile;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public HoodieCleanFileInfo() {}

  /**
   * All-args constructor.
   * @param filePath The new value for filePath
   * @param isBootstrapBaseFile The new value for isBootstrapBaseFile
   */
  public HoodieCleanFileInfo(java.lang.String filePath, java.lang.Boolean isBootstrapBaseFile) {
    this.filePath = filePath;
    this.isBootstrapBaseFile = isBootstrapBaseFile;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return filePath;
    case 1: return isBootstrapBaseFile;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: filePath = (java.lang.String)value$; break;
    case 1: isBootstrapBaseFile = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'filePath' field.
   * @return The value of the 'filePath' field.
   */
  public java.lang.String getFilePath() {
    return filePath;
  }

  /**
   * Sets the value of the 'filePath' field.
   * @param value the value to set.
   */
  public void setFilePath(java.lang.String value) {
    this.filePath = value;
  }

  /**
   * Gets the value of the 'isBootstrapBaseFile' field.
   * @return The value of the 'isBootstrapBaseFile' field.
   */
  public java.lang.Boolean getIsBootstrapBaseFile() {
    return isBootstrapBaseFile;
  }

  /**
   * Sets the value of the 'isBootstrapBaseFile' field.
   * @param value the value to set.
   */
  public void setIsBootstrapBaseFile(java.lang.Boolean value) {
    this.isBootstrapBaseFile = value;
  }

  /**
   * Creates a new HoodieCleanFileInfo RecordBuilder.
   * @return A new HoodieCleanFileInfo RecordBuilder
   */
  public static org.apache.hudi.avro.model.HoodieCleanFileInfo.Builder newBuilder() {
    return new org.apache.hudi.avro.model.HoodieCleanFileInfo.Builder();
  }

  /**
   * Creates a new HoodieCleanFileInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new HoodieCleanFileInfo RecordBuilder
   */
  public static org.apache.hudi.avro.model.HoodieCleanFileInfo.Builder newBuilder(org.apache.hudi.avro.model.HoodieCleanFileInfo.Builder other) {
    return new org.apache.hudi.avro.model.HoodieCleanFileInfo.Builder(other);
  }

  /**
   * Creates a new HoodieCleanFileInfo RecordBuilder by copying an existing HoodieCleanFileInfo instance.
   * @param other The existing instance to copy.
   * @return A new HoodieCleanFileInfo RecordBuilder
   */
  public static org.apache.hudi.avro.model.HoodieCleanFileInfo.Builder newBuilder(org.apache.hudi.avro.model.HoodieCleanFileInfo other) {
    return new org.apache.hudi.avro.model.HoodieCleanFileInfo.Builder(other);
  }

  /**
   * RecordBuilder for HoodieCleanFileInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<HoodieCleanFileInfo>
    implements org.apache.avro.data.RecordBuilder<HoodieCleanFileInfo> {

    private java.lang.String filePath;
    private java.lang.Boolean isBootstrapBaseFile;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.hudi.avro.model.HoodieCleanFileInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.filePath)) {
        this.filePath = data().deepCopy(fields()[0].schema(), other.filePath);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.isBootstrapBaseFile)) {
        this.isBootstrapBaseFile = data().deepCopy(fields()[1].schema(), other.isBootstrapBaseFile);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing HoodieCleanFileInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.hudi.avro.model.HoodieCleanFileInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.filePath)) {
        this.filePath = data().deepCopy(fields()[0].schema(), other.filePath);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.isBootstrapBaseFile)) {
        this.isBootstrapBaseFile = data().deepCopy(fields()[1].schema(), other.isBootstrapBaseFile);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'filePath' field.
      * @return The value.
      */
    public java.lang.String getFilePath() {
      return filePath;
    }

    /**
      * Sets the value of the 'filePath' field.
      * @param value The value of 'filePath'.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieCleanFileInfo.Builder setFilePath(java.lang.String value) {
      validate(fields()[0], value);
      this.filePath = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'filePath' field has been set.
      * @return True if the 'filePath' field has been set, false otherwise.
      */
    public boolean hasFilePath() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'filePath' field.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieCleanFileInfo.Builder clearFilePath() {
      filePath = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'isBootstrapBaseFile' field.
      * @return The value.
      */
    public java.lang.Boolean getIsBootstrapBaseFile() {
      return isBootstrapBaseFile;
    }

    /**
      * Sets the value of the 'isBootstrapBaseFile' field.
      * @param value The value of 'isBootstrapBaseFile'.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieCleanFileInfo.Builder setIsBootstrapBaseFile(java.lang.Boolean value) {
      validate(fields()[1], value);
      this.isBootstrapBaseFile = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'isBootstrapBaseFile' field has been set.
      * @return True if the 'isBootstrapBaseFile' field has been set, false otherwise.
      */
    public boolean hasIsBootstrapBaseFile() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'isBootstrapBaseFile' field.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieCleanFileInfo.Builder clearIsBootstrapBaseFile() {
      isBootstrapBaseFile = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public HoodieCleanFileInfo build() {
      try {
        HoodieCleanFileInfo record = new HoodieCleanFileInfo();
        record.filePath = fieldSetFlags()[0] ? this.filePath : (java.lang.String) defaultValue(fields()[0]);
        record.isBootstrapBaseFile = fieldSetFlags()[1] ? this.isBootstrapBaseFile : (java.lang.Boolean) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<HoodieCleanFileInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<HoodieCleanFileInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<HoodieCleanFileInfo>
    READER$ = (org.apache.avro.io.DatumReader<HoodieCleanFileInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
