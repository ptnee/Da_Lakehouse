/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.apache.hudi.avro.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class HoodieSliceInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6188032345461705953L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"HoodieSliceInfo\",\"namespace\":\"org.apache.hudi.avro.model\",\"fields\":[{\"name\":\"dataFilePath\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"deltaFilePaths\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"fileId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"partitionPath\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bootstrapFilePath\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"version\",\"type\":[\"int\",\"null\"],\"default\":1}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<HoodieSliceInfo> ENCODER =
      new BinaryMessageEncoder<HoodieSliceInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<HoodieSliceInfo> DECODER =
      new BinaryMessageDecoder<HoodieSliceInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<HoodieSliceInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<HoodieSliceInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<HoodieSliceInfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this HoodieSliceInfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a HoodieSliceInfo from a ByteBuffer. */
  public static HoodieSliceInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String dataFilePath;
  @Deprecated public java.util.List<java.lang.String> deltaFilePaths;
  @Deprecated public java.lang.String fileId;
  @Deprecated public java.lang.String partitionPath;
  @Deprecated public java.lang.String bootstrapFilePath;
  @Deprecated public java.lang.Integer version;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public HoodieSliceInfo() {}

  /**
   * All-args constructor.
   * @param dataFilePath The new value for dataFilePath
   * @param deltaFilePaths The new value for deltaFilePaths
   * @param fileId The new value for fileId
   * @param partitionPath The new value for partitionPath
   * @param bootstrapFilePath The new value for bootstrapFilePath
   * @param version The new value for version
   */
  public HoodieSliceInfo(java.lang.String dataFilePath, java.util.List<java.lang.String> deltaFilePaths, java.lang.String fileId, java.lang.String partitionPath, java.lang.String bootstrapFilePath, java.lang.Integer version) {
    this.dataFilePath = dataFilePath;
    this.deltaFilePaths = deltaFilePaths;
    this.fileId = fileId;
    this.partitionPath = partitionPath;
    this.bootstrapFilePath = bootstrapFilePath;
    this.version = version;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return dataFilePath;
    case 1: return deltaFilePaths;
    case 2: return fileId;
    case 3: return partitionPath;
    case 4: return bootstrapFilePath;
    case 5: return version;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: dataFilePath = (java.lang.String)value$; break;
    case 1: deltaFilePaths = (java.util.List<java.lang.String>)value$; break;
    case 2: fileId = (java.lang.String)value$; break;
    case 3: partitionPath = (java.lang.String)value$; break;
    case 4: bootstrapFilePath = (java.lang.String)value$; break;
    case 5: version = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'dataFilePath' field.
   * @return The value of the 'dataFilePath' field.
   */
  public java.lang.String getDataFilePath() {
    return dataFilePath;
  }

  /**
   * Sets the value of the 'dataFilePath' field.
   * @param value the value to set.
   */
  public void setDataFilePath(java.lang.String value) {
    this.dataFilePath = value;
  }

  /**
   * Gets the value of the 'deltaFilePaths' field.
   * @return The value of the 'deltaFilePaths' field.
   */
  public java.util.List<java.lang.String> getDeltaFilePaths() {
    return deltaFilePaths;
  }

  /**
   * Sets the value of the 'deltaFilePaths' field.
   * @param value the value to set.
   */
  public void setDeltaFilePaths(java.util.List<java.lang.String> value) {
    this.deltaFilePaths = value;
  }

  /**
   * Gets the value of the 'fileId' field.
   * @return The value of the 'fileId' field.
   */
  public java.lang.String getFileId() {
    return fileId;
  }

  /**
   * Sets the value of the 'fileId' field.
   * @param value the value to set.
   */
  public void setFileId(java.lang.String value) {
    this.fileId = value;
  }

  /**
   * Gets the value of the 'partitionPath' field.
   * @return The value of the 'partitionPath' field.
   */
  public java.lang.String getPartitionPath() {
    return partitionPath;
  }

  /**
   * Sets the value of the 'partitionPath' field.
   * @param value the value to set.
   */
  public void setPartitionPath(java.lang.String value) {
    this.partitionPath = value;
  }

  /**
   * Gets the value of the 'bootstrapFilePath' field.
   * @return The value of the 'bootstrapFilePath' field.
   */
  public java.lang.String getBootstrapFilePath() {
    return bootstrapFilePath;
  }

  /**
   * Sets the value of the 'bootstrapFilePath' field.
   * @param value the value to set.
   */
  public void setBootstrapFilePath(java.lang.String value) {
    this.bootstrapFilePath = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public java.lang.Integer getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.Integer value) {
    this.version = value;
  }

  /**
   * Creates a new HoodieSliceInfo RecordBuilder.
   * @return A new HoodieSliceInfo RecordBuilder
   */
  public static org.apache.hudi.avro.model.HoodieSliceInfo.Builder newBuilder() {
    return new org.apache.hudi.avro.model.HoodieSliceInfo.Builder();
  }

  /**
   * Creates a new HoodieSliceInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new HoodieSliceInfo RecordBuilder
   */
  public static org.apache.hudi.avro.model.HoodieSliceInfo.Builder newBuilder(org.apache.hudi.avro.model.HoodieSliceInfo.Builder other) {
    return new org.apache.hudi.avro.model.HoodieSliceInfo.Builder(other);
  }

  /**
   * Creates a new HoodieSliceInfo RecordBuilder by copying an existing HoodieSliceInfo instance.
   * @param other The existing instance to copy.
   * @return A new HoodieSliceInfo RecordBuilder
   */
  public static org.apache.hudi.avro.model.HoodieSliceInfo.Builder newBuilder(org.apache.hudi.avro.model.HoodieSliceInfo other) {
    return new org.apache.hudi.avro.model.HoodieSliceInfo.Builder(other);
  }

  /**
   * RecordBuilder for HoodieSliceInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<HoodieSliceInfo>
    implements org.apache.avro.data.RecordBuilder<HoodieSliceInfo> {

    private java.lang.String dataFilePath;
    private java.util.List<java.lang.String> deltaFilePaths;
    private java.lang.String fileId;
    private java.lang.String partitionPath;
    private java.lang.String bootstrapFilePath;
    private java.lang.Integer version;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.hudi.avro.model.HoodieSliceInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.dataFilePath)) {
        this.dataFilePath = data().deepCopy(fields()[0].schema(), other.dataFilePath);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deltaFilePaths)) {
        this.deltaFilePaths = data().deepCopy(fields()[1].schema(), other.deltaFilePaths);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fileId)) {
        this.fileId = data().deepCopy(fields()[2].schema(), other.fileId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.partitionPath)) {
        this.partitionPath = data().deepCopy(fields()[3].schema(), other.partitionPath);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.bootstrapFilePath)) {
        this.bootstrapFilePath = data().deepCopy(fields()[4].schema(), other.bootstrapFilePath);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.version)) {
        this.version = data().deepCopy(fields()[5].schema(), other.version);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing HoodieSliceInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.hudi.avro.model.HoodieSliceInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.dataFilePath)) {
        this.dataFilePath = data().deepCopy(fields()[0].schema(), other.dataFilePath);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deltaFilePaths)) {
        this.deltaFilePaths = data().deepCopy(fields()[1].schema(), other.deltaFilePaths);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fileId)) {
        this.fileId = data().deepCopy(fields()[2].schema(), other.fileId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.partitionPath)) {
        this.partitionPath = data().deepCopy(fields()[3].schema(), other.partitionPath);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.bootstrapFilePath)) {
        this.bootstrapFilePath = data().deepCopy(fields()[4].schema(), other.bootstrapFilePath);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.version)) {
        this.version = data().deepCopy(fields()[5].schema(), other.version);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'dataFilePath' field.
      * @return The value.
      */
    public java.lang.String getDataFilePath() {
      return dataFilePath;
    }

    /**
      * Sets the value of the 'dataFilePath' field.
      * @param value The value of 'dataFilePath'.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieSliceInfo.Builder setDataFilePath(java.lang.String value) {
      validate(fields()[0], value);
      this.dataFilePath = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'dataFilePath' field has been set.
      * @return True if the 'dataFilePath' field has been set, false otherwise.
      */
    public boolean hasDataFilePath() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'dataFilePath' field.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieSliceInfo.Builder clearDataFilePath() {
      dataFilePath = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'deltaFilePaths' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getDeltaFilePaths() {
      return deltaFilePaths;
    }

    /**
      * Sets the value of the 'deltaFilePaths' field.
      * @param value The value of 'deltaFilePaths'.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieSliceInfo.Builder setDeltaFilePaths(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.deltaFilePaths = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'deltaFilePaths' field has been set.
      * @return True if the 'deltaFilePaths' field has been set, false otherwise.
      */
    public boolean hasDeltaFilePaths() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'deltaFilePaths' field.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieSliceInfo.Builder clearDeltaFilePaths() {
      deltaFilePaths = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'fileId' field.
      * @return The value.
      */
    public java.lang.String getFileId() {
      return fileId;
    }

    /**
      * Sets the value of the 'fileId' field.
      * @param value The value of 'fileId'.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieSliceInfo.Builder setFileId(java.lang.String value) {
      validate(fields()[2], value);
      this.fileId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'fileId' field has been set.
      * @return True if the 'fileId' field has been set, false otherwise.
      */
    public boolean hasFileId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'fileId' field.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieSliceInfo.Builder clearFileId() {
      fileId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'partitionPath' field.
      * @return The value.
      */
    public java.lang.String getPartitionPath() {
      return partitionPath;
    }

    /**
      * Sets the value of the 'partitionPath' field.
      * @param value The value of 'partitionPath'.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieSliceInfo.Builder setPartitionPath(java.lang.String value) {
      validate(fields()[3], value);
      this.partitionPath = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'partitionPath' field has been set.
      * @return True if the 'partitionPath' field has been set, false otherwise.
      */
    public boolean hasPartitionPath() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'partitionPath' field.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieSliceInfo.Builder clearPartitionPath() {
      partitionPath = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'bootstrapFilePath' field.
      * @return The value.
      */
    public java.lang.String getBootstrapFilePath() {
      return bootstrapFilePath;
    }

    /**
      * Sets the value of the 'bootstrapFilePath' field.
      * @param value The value of 'bootstrapFilePath'.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieSliceInfo.Builder setBootstrapFilePath(java.lang.String value) {
      validate(fields()[4], value);
      this.bootstrapFilePath = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'bootstrapFilePath' field has been set.
      * @return True if the 'bootstrapFilePath' field has been set, false otherwise.
      */
    public boolean hasBootstrapFilePath() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'bootstrapFilePath' field.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieSliceInfo.Builder clearBootstrapFilePath() {
      bootstrapFilePath = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public java.lang.Integer getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieSliceInfo.Builder setVersion(java.lang.Integer value) {
      validate(fields()[5], value);
      this.version = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieSliceInfo.Builder clearVersion() {
      version = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public HoodieSliceInfo build() {
      try {
        HoodieSliceInfo record = new HoodieSliceInfo();
        record.dataFilePath = fieldSetFlags()[0] ? this.dataFilePath : (java.lang.String) defaultValue(fields()[0]);
        record.deltaFilePaths = fieldSetFlags()[1] ? this.deltaFilePaths : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.fileId = fieldSetFlags()[2] ? this.fileId : (java.lang.String) defaultValue(fields()[2]);
        record.partitionPath = fieldSetFlags()[3] ? this.partitionPath : (java.lang.String) defaultValue(fields()[3]);
        record.bootstrapFilePath = fieldSetFlags()[4] ? this.bootstrapFilePath : (java.lang.String) defaultValue(fields()[4]);
        record.version = fieldSetFlags()[5] ? this.version : (java.lang.Integer) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<HoodieSliceInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<HoodieSliceInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<HoodieSliceInfo>
    READER$ = (org.apache.avro.io.DatumReader<HoodieSliceInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
